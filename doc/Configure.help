# Hello World

Prompt for experimental code
CONFIG_EXPERIMENTAL
  Allow to enable experimental features.  Beware that work in
  progress code might be less stable and might not work or compile
  even.

Teensy build
TEENSY_SUPPORT
  Reduce size of built firmware here and there.  For example reduce
  the number of understood ecmd commands, try to avoid divisons
  (which are quite expensive on AVR hardware).

  You want to say Y here for ATmega8 or similar controllers and
  probably also want to disable TCP support.

Enable (Serial-Line) Debugging
DEBUG
  Enable serial-line debugging capability of Ethersex firmware.
  
  If you enable this you either want to add some debug_printf
  instructions here and there in the firmware source code or enable
  some of the pre-defined debugging-categories, see submenu.

Reroute to SYSLOG
DEBUG_USE_SYSLOG
  Depends on: 
   * SYSLOG support (SYSLOG_SUPPORT)
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD
DEBUG_ECMD
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD FS20
DEBUG_ECMD_FS20
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD IP
DEBUG_ECMD_IP
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD MAC
DEBUG_ECMD_MAC
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD NET
DEBUG_ECMD_NET
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD OW LIST
DEBUG_ECMD_OW_LIST
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD OW ROM
DEBUG_ECMD_OW_ROM
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD PORTIO
DEBUG_ECMD_PORTIO
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ECMD RC5
DEBUG_ECMD_RC5
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

ENC28J60
DEBUG_ENC28J60
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

Interrupt
DEBUG_INTERRUPT
  Depends on: 
   * ENC28J60 (DEBUG_ENC28J60)

  There's unfortunately no help available for this item.

Networking
DEBUG_NET
  Depends on: 
   * ENC28J60 (DEBUG_ENC28J60)

  There's unfortunately no help available for this item.

Config
DEBUG_NET_CONFIG
  Depends on: 
   * Networking (DEBUG_NET)

  There's unfortunately no help available for this item.

Unknown packets
DEBUG_UNKNOWN_PACKETS
  Depends on: 
   * Networking (DEBUG_NET)

  There's unfortunately no help available for this item.

Rev. 4 Workaround
DEBUG_REV4_WORKAROUND
  Depends on: 
   * ENC28J60 (DEBUG_ENC28J60)

  There's unfortunately no help available for this item.

File System
DEBUG_FS
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

Inode Table
DEBUG_FS_INODETABLE
  Depends on: 
   * File System (DEBUG_FS)

  There's unfortunately no help available for this item.

Mark
DEBUG_FS_MARK
  Depends on: 
   * File System (DEBUG_FS)

  There's unfortunately no help available for this item.

FS20 RF-control
FS20_SUPPORT

  Add support for ELV FS20 protocol.
  For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.

FS20 Receive
DEBUG_FS20_REC
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.
  For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.

FS20 Receive Queue
DEBUG_FS20_REC_QUEUE
  Depends on: 
   * FS20 Receive (DEBUG_FS20_REC)

  There's unfortunately no help available for this item.
  For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.

FS20 Receive Verbose
DEBUG_FS20_REC_VERBOSE
  Depends on: 
   * FS20 Receive (DEBUG_FS20_REC)

  There's unfortunately no help available for this item.
  For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.

FS20 WS300
DEBUG_FS20_WS300
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.
  For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.

FS20 WS300 Verbose
DEBUG_FS20_WS300_VERBOSE
  Depends on: 
   * FS20 WS300 (DEBUG_FS20_WS300)

  There's unfortunately no help available for this item.
  For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.

HD44780
DEBUG_HD44780
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

HTTPD
DEBUG_HTTPD
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

RC5
DEBUG_RC5
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

Sendmail
DEBUG_SENDMAIL
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

Timer
DEBUG_TIMER
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

IPv6 support
IPV6_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  There's unfortunately no help available for this item.

Enable IP forwarding
IP_FORWARDING_SUPPORT
  Depends on: 
   * Router support (enable several network interfaces!) (ROUTER_SUPPORT)

  Forward IP packets between several interfaces, e.g. from USB to RFM12,
  Ethernet to RFM12, etc.

HC595 output expansion
HC595_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)

  There's unfortunately no help available for this item.

HC165 support
HC165_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)

  There's unfortunately no help available for this item.

Inverse output
HC165_INVERSE_OUTPUT
  Depends on: 
   * HC165 support (HC165_SUPPORT)

  There's unfortunately no help available for this item.

PS/2 keyboard
PS2_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Support for PS/2 keyboards, currently keystrokes are only logged to
  SYSLOG.  That is, you need to modify the firmware for further use.

PS/2: Use German layout
PS2_GERMAN_LAYOUT
  Depends on: 
   * PS/2 keyboard (PS2_SUPPORT)

  There's unfortunately no help available for this item.

ADC input
ADC_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)

  Enable ADC abstraction layer.  This especially enables a further
  ECMD 'adc get' which triggers a ADC conversion for each channel
  and returns the gained values.

FS20 RF-control
FS20_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  There's unfortunately no help available for this item.

Send RC5 IR-codes
RC5_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Add support to send and receive RC5 IR-remote codes.

Usart ecmd interface (RS232)
ECMD_SERIAL_USART_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)

  Add support for ECMDs received on serial RS232 link.

Usart ecmd RS485 mode
ECMD_SERIAL_USART_RS485_SUPPORT
  Depends on: 
   * Usart ecmd interface (RS232) (ECMD_SERIAL_USART_SUPPORT)

  There's unfortunately no help available for this item.

Blinkenlights - MicroControllerUnitFrame
MCUF_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  Enables UDP-Blinkenlights-Streams reciever on Port 2323

  Supported proctocols:
    BLP
    EBLP
    MCUF
  
  For Details see https://wiki.blinkenarea.org/index.php/Protocols
  
  To use the incomming data, you have to enable either
    MCUF usart
  or
    BLP SUPPORT

  Use "MCUF usart" to send Data over USART 0 or 1 for example to a
  Shifter (see https://wiki.blinkenarea.org/index.php/Shifter). If
  you want to use "MCUF usart", you also have to select the USART
  in the field "MCUF usart select".
  
  Use "BLP SUPPORT" if you have a BlinkenLedsPro or compatible
  Hardware directly connected to your microcontroller.
  See https://wiki.blinkenarea.org/index.php/BlinkenLEDs for
  Details. You have to use an Atmega8 to enable "BLP SUPPORT" or
  add you have to add the propper pinning in pinning/controllers/.

Readback support
HD44780_READBACK
  Depends on: 
   * HD44780 module driver (HD44780_SUPPORT)

  There's unfortunately no help available for this item.

Use Port C (instead of Port A)
HD44780_USE_PORTC
  Depends on: 
   * HD44780 module driver (HD44780_SUPPORT)

  There's unfortunately no help available for this item.

YPort Support
YPORT_SUPPORT
  Depends on: 
   * TCP support (TCP_SUPPORT)

  Enable TCP-to-RS232 gateway, i.e. an X-Port.
  It's bound to TCP port 7970.

  A really cool possibility to use YPort is socat. With socat you can set up
  a PTY device on your Linux, which you can use as a normal serial interface.

  socat PTY,link=/dev/YPort TCP:192.168.1.5:7970 

Cryptographic functionality
CRYPTO_SUPPORT
  Enable cryptographic functionality in Ethersex.  You have to
  choose the ciphers and/or hashes to include from the submenu.

  If you'd like to use OpenVPN consider enabling Cast5 and MD5.  To
  encrypt RFM12 traffic enable Skipjack.

CAST5
CAST5_SUPPORT
  Depends on: 
   * Cryptographic functionality (CRYPTO_SUPPORT)

  Enable CAST-5 cipher needed for OpenVPN.

Skipjack
SKIPJACK_SUPPORT
  Depends on: 
   * Cryptographic functionality (CRYPTO_SUPPORT)

  Enable Skipjack-cipher to encrypted streamed data of
    * ZBus
    * RFM12
    * TFTP Bootloader

MD5
MD5_SUPPORT
  Depends on: 
   * Cryptographic functionality (CRYPTO_SUPPORT)

  Enable MD5-hash for OpenVPN packet authentication.

RFM12 (FSK transmitter) support
RFM12_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  RFM12 are cheap 433 MHz FSK-transmitters (i.e. wireless)

  RFM12 are available from pollin at
  http://www.pollin.de/shop/detail.php?pg=NQ==&a=MDU5OTgxOTk=

  For a step-by-step howto, see
  http://ethersex.de/tiki-index.php?page=Ethersex%3AStepByStep%3ARFM12

RFM12 ARP-Proxy
RFM12_ARP_PROXY
  Depends on: 
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * RFM12 (FSK transmitter) support (RFM12_SUPPORT)

  There's unfortunately no help available for this item.

RFM12 ASK (Amplitude Shift Keying) Support
RFM12_ASK_SUPPORT
  Depends on:
   * RFM12 (FSK transmitter) support (RFM12_SUPPORT)

  This ASK is very helpful for playing around with radio controlled
  power switches or similar devices.
  Due to the fact that the FM transmitting RFM12 chip is just turned
  on of off, the modulation is ASK.

RFM12 ASK SENDER (Amplitude Shift Keying) Sending Support
RFM12_ASK_SENDER_SUPPORT
  Depends on:
   * RFM12 ASK (Amplitude Shift Keying) Support

  Enables to send commands to at least these power switching devices.
  e.g.
    - Kentai
    - Pollin
    - Tevion
    - ELRO

RFM12 ASK external filter enables external filter Support
RFM12_ASK_EXTERNAL_FILTER_SUPPORT
  Depends on:
   * RFM12 ASK (Amplitude Shift Keying) Support

  External filter enables to listen to the received audio signal
  at PIN4 of the RFM12 device.

IPchair (firewalling)
IPCHAIR_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Basic firewalling functionallity, similar to IPtables.

  Configuration in ipchair/userscript.m4

IPchair: Masquerading
IPCHAIR_MASQ
  Depends on: 
   * IPchair (firewalling) (IPCHAIR_SUPPORT)

  Simple, quite untested, masquerading code.  You might consider using
  it for USB-to-anywhere dongles ...

  Use with care.

control6 scripts
CONTROL6_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  6Control is a BASIC-like scripting language which you can use
  to freely program your Ethersex.  It supports threading etc.
  and it's probably far easier to do simple control task with it
  than implementing these in C code.

  See control6/control6.src to get an impression of the language,
  e.g. example code.  There are more examples in the Ethersex wiki.

TCP support
TCP_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  There's unfortunately no help available for this item.

UDP support
UDP_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  There's unfortunately no help available for this item.

UDP broadcast support
BROADCAST_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  There's unfortunately no help available for this item.

ICMP support
ICMP_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  There's unfortunately no help available for this item.

BOOTP support
BOOTP_SUPPORT
  Depends on: 
   * UDP broadcast support (BROADCAST_SUPPORT)
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * IPv4 support (IPV4_SUPPORT)

  IPv4 address autoconfiguration, a la DHCP.

  Most DHCP servers support BOOTP as DHCP's predecessor.
  Mind that in dnsmasq you have to enable 'bootp-dynamic' in the
  configuration file.

Write BOOTP data to EEPROM
BOOTP_TO_EEPROM_SUPPORT
  Depends on: 
   * Build a bootloader (BOOTLOADER_SUPPORT)
   * BOOTP support (BOOTP_SUPPORT)

  There's unfortunately no help available for this item.

DNS support
DNS_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  Link a simple DNS resolver into the firmware.  It can be used
  either in own program code or by other applications.  For example
  the NTP client is capable of doing so.

SYSLOG support
SYSLOG_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * UDP support (UDP_SUPPORT)

  Enable syslog CLIENT support, i.e. allow to log messages to specified
  syslog server.  These messages can be sent straight from the
  C source code using syslog_send... calls or from 6Control scripts.

OpenVPN
OPENVPN_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  Enable OpenVPN server.

  It currenly supports only symmetric ciphers (e.g. Cast5).

  For details on configuration see 
  http://ethersex.de/tiki-index.php?page=EtherSexNetworkOpenVpn

OpenVPN key
CONF_OPENVPN_KEY

  The encryption key for OpenVPN communication.

  Paste the first line of hex-digits from the OpenVPN key file,
  generated on the host PC.

  For details on configuration see 
  http://ethersex.de/tiki-index.php?page=EtherSexNetworkOpenVpn

OpenVPN HMAC key
CONF_OPENVPN_HMAC_KEY

  The authentication key for OpenVPN communication.

  Paste the fifth line of hex-digits from the OpenVPN key file,
  generated on the host PC.

  For details on configuration see 
  http://ethersex.de/tiki-index.php?page=EtherSexNetworkOpenVpn

RFM12 raw
RFM12_RAW_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * RFM12 (FSK transmitter) support (RFM12_SUPPORT)
   * Router support (enable several network interfaces!) (ROUTER_SUPPORT)

  Forward raw data (sent to UDP port 16962, i.e. 0x4242) to RFM12.

  Every packet received on RFM12 is passed back to the sender of the UDP 
  packet, for about half a second after reception of the initial UDP packet.

ZBUS raw
ZBUS_RAW_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * ZBus Support (ZBUS_SUPPORT)
   * Router support (enable several network interfaces!) (ROUTER_SUPPORT)

  Forward raw data (sent to UDP port 16963, i.e. 0x4243) to ZBUS.

  Every packet received on ZBus is passed back to the sender of the UDP 
  packet, for about half a second after reception of the initial UDP packet.

USB (Softwarestack) Support (EXPERIMENTAL)
USB_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  There's unfortunately no help available for this item.

USBnet
USB_NET_SUPPORT
  Depends on: 
   * USB (Softwarestack) Support (EXPERIMENTAL) (USB_SUPPORT)
   * Networking support (UIP_SUPPORT)

  IP-Networking over USB.  It doesn't use kernel-driven CDC-subset
  because of too high controller load.

  You need to use the userspace-space client available from contrib/usb_net

USBnet ARP-Proxy
USB_ARP_PROXY
  Depends on: 
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)

  There's unfortunately no help available for this item.

System clock support
CLOCK_SUPPORT
  Enable system clock.
  
  A detailed step-by-step guide is available at
  http://ethersex.de/tiki-index.php?page=Ethersex%3AStepByStep%3AAmPulsDerZeit

Use 32 kHz crystal to tick the clock
CLOCK_CRYSTAL_SUPPORT
  Depends on: 
   * System clock support (CLOCK_SUPPORT)

  Tick the system clock through a connected clock-crystal, not the internal
  oscillator.

Synchronize using DCF77 signal
DCF77_SUPPORT
  Depends on: 
   * Use 32 kHz crystal to tick the clock (CLOCK_CRYSTAL_SUPPORT)

  Use the DCF77-signal as a clock source to synchronize to.
  Consider this as alpha-code for the moment :-)

Synchronize using NTP protocol
NTP_SUPPORT
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * UDP support (UDP_SUPPORT)

  Synchronize the system clock via NTP.

NTP Full Qualified NTP-Server Name
NTP_SERVER
 Enter the right fqdn of your NTP-Server right here. The Servername 
 depends on IPv4/IPv6.

NTP Server IP Address
NTP_SERVER_IPADDR
 This IP depends on your IPv4 or IPv6 selection and provides
 to set the correct NTP-Server IP Address for your network.
 Usefull during disabled DNS operations.


NTP Server Port Number
NTP_PORT
 The Port Number for your NTP-Server
  Default is 123

Cron daemon
CRON_SUPPORT
  Depends on: 
   * System clock support (CLOCK_SUPPORT)

  Enable cron-alike service.  The crontab has to be hard-coded at the moment.
  See cron/cron.c.

NTP daemon
NTPD_SUPPORT
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * UDP support (UDP_SUPPORT)

  Enable NTP server.

Working hour meter
WHM_SUPPORT
  Depends on: 
   * System clock support (CLOCK_SUPPORT)

  Calculate system uptime, adds further ECMD 'whm'.

TFTP support
TFTP_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  Enable built-in TFTP server.

  If configured with BOOTLOADER-support uploaded data is stored to
  flash memory.

  For Ethersex-based application firmware data can be uploaded/downloaded
  to/from the virtual file system (i.e. dataflash, SD-cards, etc.)

TFTP-o-matic
TFTPOMATIC_SUPPORT
  Depends on: 
   * TFTP support (TFTP_SUPPORT)

  There's unfortunately no help available for this item.

MDNS service announcement (Avahi)
MDNS_SD_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  Multi-cast DNS (well-known as "Avahi") support.

  If you enable this option, the firmware will announce availibilty of
  the configured services in the local network using Avahi.

Stella Light
STELLA_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  UDP-controlled cruft to controll several LEDs with PWM ...
  Currently quite alpha, i.e. flickering :-/

UDP Echo
UDP_ECHO_NET_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)

  There's unfortunately no help available for this item.

Update DNS records at dyn.metafnord.de
DYNDNS_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  Simple UDP echo, i.e. simply sends back what it received on UDP port 7.

Watch IO changes (and react)
WATCHCAT_SUPPORT
  Depends on: 
   * Send ECMD messages (ECMD_SENDER_SUPPORT)
   * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)

  Watch I/O lines for activity, i.e. rising or falling edge.
  As a result of such a change a ECMD can be emitted to another host.

  For example you can configure a ECMD to be sent to another host if
  there is a falling edge on PA1.

Simple Network Managment Protocol support (snmp)
SNMP_SUPPORT
  Depends on: 
   * UDP support (UDP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Make ADC, Hostname and Uptime available through SNMP.
  
  Set default values for DESCRIPTION, LOCATION and CONTACT.

Sendmail support (smtp)
SENDMAIL_SUPPORT
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Sample code to send emails on custom events (currently start-up only).

SMTP Auth Support
SENDMAIL_AUTH_SUPPORT
  Depends on: 
   * Sendmail support (smtp) (SENDMAIL_SUPPORT)

  Support for SMTP authentication.

HTTP Server
HTTPD_SUPPORT
  Depends on: 
   * TCP support (TCP_SUPPORT)

  Enable HTTP server.

Basic Authentication
HTTPD_AUTH_SUPPORT
  Depends on: 
   * HTTP Server (HTTPD_SUPPORT)

  Enable 'basic'-Authentication for HTTP server.

Modbus Support
MODBUS_SUPPORT
  Depends on: 

  Modbus is a standardized bus, see http://modbus.org/ for details.

  Enable this if you'd like to enable a TCP(port 502)-to-Modbus(RS485) gateway.

KTY Calculation Support
KTY_SUPPORT
  Depends on: 
   * ADC input (ADC_SUPPORT)

  Add support for KTY temperature sensors, connected to ADC pins.
  This results in a further ecmd 'kty get 0', 'kty get 1', etc.

  For hardware layout and further howto, look at
  http://ethersex.de/tiki-index.php?page=KtyTemperatur

Ethernet (ENC28J60) support
ENC28J60_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  There's unfortunately no help available for this item.

Static IPv6 configuration
IPV6_STATIC_SUPPORT
  Depends on: 
   * IPv6 support (IPV6_SUPPORT)

  There's unfortunately no help available for this item.

I2C Atmel dataflash
DATAFLASH_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Add code to support the dataflash found on Etherrape original hardware.

ZBus Support
ZBUS_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)

  IP link over RS485

  Typical/default baudrate 19200.  Distances of several hundred metres possible
  without problems.  ZBUS/RS485 needs two wires for communication.

  32 stations possible on one bus.

  The ZBUS protocol is our own development, its no official standard.
  For details on ZBus see http://dokucode.de/tiki-index.php?page=ZBusInterface

ZBUS ARP-Proxy
ZBUS_ARP_PROXY
  Depends on: 
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * ZBus Support (ZBUS_SUPPORT)

  There's unfortunately no help available for this item.

TCP/Telnet interface
ECMD_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)
   * TCP support (TCP_SUPPORT)

  There's unfortunately no help available for this item.

UDP interface
UECMD_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * UDP support (UDP_SUPPORT)

  There's unfortunately no help available for this item.

I2C interface
ECMD_SERIAL_I2C_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  There's unfortunately no help available for this item.

USB interface
ECMD_USB_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * USB (Softwarestack) Support (EXPERIMENTAL) (USB_SUPPORT)

  There's unfortunately no help available for this item.

Send ECMD messages
ECMD_SENDER_SUPPORT
  Depends on: 
   * TCP support (TCP_SUPPORT)

  Add code to send ECMDs to other hosts (e.g. Etherrape/-sex compatible
  hardware, PCs, etc.).

  This is especially useful with the option 'Watch IO changes'.

Onewire support
ONEWIRE_SUPPORT
  Add support for Dallas 1-wire.

Onewire device detection support
ONEWIRE_DETECT_SUPPORT
  Add support for automatic 1-wire device detection, i.e. scan
  bus for attached devices.

Onewire DS2502 (eeprom) support
ONEWIRE_DS2502_SUPPORT
  Support DS2502 1-wire EEPROMs.

Named and logic state I/O
NAMED_PIN_SUPPORT
  Enable Named-Pin support, i.e. hardware-pin abstraction.

  This way you can assign a human-readable name to a physical pin.  This
  can be used together with ecmd, e.g.
    
    pin get NAME                -- to read NAME
    pin set NAME STATUS         -- to set the pin NAME to STATUS (on/off)
    pin toggle NAME             -- to toggle the pin NAME

MCUF usart
MCUF_SERIAL_SUPPORT
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

  Converts and sends incomming UDP-Blinkenlights-Streams to the
  selected USART 0 or 1 for example to a Shifter
  (see https://wiki.blinkenarea.org/index.php/Shifter). You have
  to select the USART in the field "MCUF usart select".

BLP SUPPORT
BLP_SUPPORT
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

  Use "BLP SUPPORT" if you have a BlinkenLedsPro or compatible
  Hardware directly connected to your microcontroller.
  See https://wiki.blinkenarea.org/index.php/BlinkenLEDs for
  Details.
  
  Pinbelegung am Atmega8:
  
  clock:  PB0
  strobe: PD5
  data 1/2: PB1
  data 3/4: PB2
  data 5/6: PD4
  data 5/8: PD3
  data 9/10: PB3
  data 11/12: PB4
  data 13/14: PB5
  data 15/16: PC2
  data 17/18: PC3

VFS (Virtual File System) support
VFS_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Enable the virtual file system abstraction layer.

  The VFS combines several physical data sources (e.g. SD reader and dataflash)
  to one abstract source exposed to the HTTP server, TFTP, etc.

  To make it short: say 'yes' if you want to serve files via HTTP.

Dataflash: Filesystem Access
VFS_DF_SUPPORT
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   * SPI Atmel dataflash (DATAFLASH_SUPPORT)

  Link the dataflash to VFS.

VFS File Inlining
VFS_INLINE_SUPPORT
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)

  Make files attached to the end of the firmware available to the VFS.

  The make system automatically attaches all files stored below vfs/embed/
  to the firmware.

SD/MMC-Card Access
VFS_SD_SUPPORT
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   * MMC/SD card reader (SD_READER_SUPPORT)

  Link the SD reader to VFS.

Disable IP-Configuration
DISABLE_IPCONF_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)
   * ECMD support (ECMD_PARSER_SUPPORT)

  Disable the ecmd's to set ip, gw, netmask and mac

Disable remote reboot
DISABLE_REBOOT_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)
   * ECMD support (ECMD_PARSER_SUPPORT)

  Disable the commands to reboot the e'sex remote (reset, wdreset and bootloader)

IP Statistics
IPSTATS_SUPPORT
  Depends on: 
   * Networking support (UIP_SUPPORT)
   * ECMD support (ECMD_PARSER_SUPPORT)

  There's unfortunately no help available for this item.

Memory usage information (free)
FREE_SUPPORT
  Depends on: 
   * ECMD support (ECMD_PARSER_SUPPORT)

  There's unfortunately no help available for this item.

IPv6
DEBUG_NET_IP6
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

OpenVPN
DEBUG_OPENVPN
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

Router
DEBUG_ROUTER
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

uIP
DEBUG_UIP
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

SD-Reader
DEBUG_SD_READER
  Depends on: 
   * Enable (Serial-Line) Debugging (DEBUG)

  There's unfortunately no help available for this item.

MMC/SD card reader
SD_READER_SUPPORT
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Add support to access SD memory cards (read and write) with
  FAT or FAT32 file system.

  The files can be accessed via the 'Virtual File System',
  and as a result through HTTP (read only) or TFTP (read/write).

Jabber client (EXPERIMENTAL)
JABBER_SUPPORT
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Enable Jabber client.

Server IP
CONF_JABBER_IP

  The IP of the jabber server you would like your Ethersex to 
  connect to.

Server Hostname
CONF_JABBER_HOSTNAME

  The Hostname of the Jabber server you would like to connect
  to.  This has to be the fully qualified domain name of the
  server specified by the IP above (otherwise the server probably
  will reject your connections).

Username
CONF_JABBER_USERNAME

  The username which shall be used to authenticate to the 
  Jabber server.

Password
CONF_JABBER_PASSWORD

  The password associated with the specified username.

Target Buddy Name
CONF_JABBER_BUDDY

  The Jabber-ID of the one to whom the start-up message as
  well as messages emitted by 6Control scripts shall be
  sent to.

Alias Command Names
ALIASCMD_SUPPORT
  Depends on: 
   * ECMD (Etherrape Control Interface) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)

  Define aliases for your ecmds. Aliases are expanded if $ ist the first 
  character of your emcd. Example:

  `$i' -> `show ip'

MCUF screen width
MCUF_OUTPUT_SCREEN_WIDTH
  Depends on:
   * MCUF usart

  MCUF screen width * MCUF screen height must be smaller than 256.

MCUF screen height
MCUF_OUTPUT_SCREEN_HEIGHT
  Depends on:
   * MCUF usart

  MCUF screen width * MCUF screen height must be smaller than 256.

Inline the .config
VFS_CONFIG_INLINE_SUPPORT
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)

 Includes the .config file during compile into flash.
 Very usefull for debugging or review of compile settings.
 
 Access via http://ethersexip/conf

